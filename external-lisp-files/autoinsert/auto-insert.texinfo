\input texinfo                  @c -*-texinfo-*-
@c $Id: auto-insert.texinfo,v 1.1.1.1 2002-02-28 18:00:54 savoie Exp $
@c For debugging change this to @set DEBUG
@clear DEBUG

@comment %**start of header (This is for running Texinfo on a region.)
@setfilename auto-insert.info
@settitle Auto Insert
@ifclear DEBUG
@c Try and save some paper
@setchapternewpage odd
@end ifclear
@comment %**end of header (This is for running Texinfo on a region.)

@ifclear DEBUG
@iftex
@finalout
@end iftex
@end ifclear

@ifinfo
This file documents Auto Insert.

Copyright (C) 1994 Kevin Davidson

@ifset DEBUG
Debugging version.
@end ifset

Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

@ignore
Permission is granted to process this file through TeX and print the
results, provided the printed document carries copying permission notice
identical to this one except for the removal of this paragraph (this
paragraph not being relevant to the printed manual).

@end ignore
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under same conditions as for modified versions.
@end ifinfo

@titlepage
@sp 6
@center @titlefont{Auto Insert}
@sp 1
@center A Template Package for
@sp 1
@center GNU Emacs
@sp 12
@center Kevin Davidson
@center Kevin.Davidson@@ed.ac.uk

@page
@ifset DEBUG
@noindent
Debugging version of manual.

@end ifset
@noindent
$Date: 2002-02-28 18:00:54 $

@noindent
$Revision: 1.1.1.1 $

@vskip 0pt plus 1filll

Copyright @copyright{} 1994 Kevin Davidson

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

@ignore
Permission is granted to process this file through Tex and print the
results, provided the printed document carries copying permission
notice identical to this one except for the removal of this paragraph
(this paragraph not being relevant to the printed manual).

@end ignore
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the same conditions as for modified versions.

@end titlepage

@c @ifinfo

@node Top, Overview, (dir), (dir)
@comment  node-name,  next,  previous,  up

@noindent
This manual documents @file{auto-insert-tkld.el}, by Kevin Davidson
@samp{Kevin.Davidson@@ed.ac.uk}. 
Auto Insert is a package for automatically setting up default text
when creating a new file.

@c @end ifinfo

@menu
* Overview::                    What is Auto Insert ?
* Installation::                Installing Auto Insert.
* Customisation::               How to tailor Auto Insert.

* Variable Index::
* Concept Index::
@end menu

@node Overview, Installation, Top, Top
@comment  node-name,  next,  previous,  up
@chapter Overview of Auto Insert

@cindex Auto Insert
@cindex Overview

@dfn{Auto Insert} is a package for setting up default contents in
new GNU Emacs buffers. 
When typing @kbd{C-x C-f new-file.c} it can automatically set up
the new buffer with standard copyright or disclaimer messages, 
RCS or SCCS version control lines, author's name, the date or
other information.

The same can be achieved with an existing buffer, by typing
@kbd{M-x auto-insert-type} to ask for the type of file that
a buffer corresponds to. Types might include program source,
documentation, letters, announcements or anything else
for which a standard layout might be wanted.

@node Installation, Customisation, Overview, Top
@comment  node-name,  next,  previous,  up
@chapter Installation

 Before you can use Auto Insert, it will have to be installed on your
system. If this has already been done (by a system administrator
or another user), you can skip @ref{Installing From Scratch} and go
stright on to @ref{Using Auto Insert}.

@menu
* Installing From Scratch::
* Using Auto Insert::
@end menu

@node Installing From Scratch, Using Auto Insert, Installation, Installation 
@comment  node-name,  next,  previous,  up
@section Installing From Scratch

To install Auto Insert, check the paths for info and lisp directories
at the top of the @file{Makefile} are correct for your system
and type @kbd{make} to build the package.
Typing @kbd{make install} will copy the files to the
correct locations.

This manual can then be printed out on a 
PostScript printer by typing @kbd{lpr auto-insert.ps}.

@node Using Auto Insert,,Installing From Scratch, Installation
@comment  node-name,  next,  previous,  up
@section Using Auto Insert

Try this now to test Auto Insert:

@itemize @bullet
@item
Load the package into Emacs by typing
@kbd{M-x load-library @key{RET} auto-insert-tkld @key{RET}}

@item
Create a new file in another window with
@kbd{C-x 4 C-f new-file.c @key{RET}}.
@end itemize

This buffer should contain a skeleton file with a leading comment.
For details on how to modify this text, 
see @ref{Creating Template Files}.

To make Auto Insert a permanent feature in Emacs, add 
@code{(require 'auto-insert-tkld)} 
to the @file{~/.emacs} file in your home directory 
and check that any customisation variables are
set to suitable values @pxref{Customisation Variables}, using @code{setq}.

@node Customisation, Variable Index, Installation, Top
@comment  node-name,  next,  previous,  up
@chapter Customisation

@cindex Customisation
@cindex Tailoring
Auto Insert can be customised in two ways:

@itemize @bullet
@item
Lisp variables that can be set in @file{.emacs} or @file{site-start.el}

@item
The insert files themselves can be edited.
@end itemize

@menu
* Customisation Variables::
* Creating Template Files::
@end menu

@node Customisation Variables, Creating Template Files, Customisation, Customisation
@comment  node-name,  next,  previous,  up
@section Customisation Variables

Auto Insert can be customised to behave differently using the following
variables:

@defopt auto-insert-automatically
Default: t

If t, automatically insert file contents based on file name and type.
If nil, do not automatically insert any contents and leave the buffer 
untouched. This effectively turns off Auto Insert.
If non-nil and non-t, then ask the user for each new file whether
to insert file contents or not.

@end defopt
@defopt auto-insert-alist

An alist of regular expressions to match file names and the types of
file they represent. For example
@samp{ (("\\.tex$" . "TeX") ("\\.c" . "C")) }
would define files ending in @file{.tex} as being @TeX{} documents
and those ending in @file{.c} as C source code.

@end defopt
@defopt auto-insert-type-alist

An alist of auto-insert types and the names of files that should be inserted
for those types. For example
@samp{ (("TeX" . "tex-insert.tex") ("C" . "c-insert.c")) },
would say that files of type @samp{TeX} should be automatically
created with the contents of @file{tex-insert.tex}.
This file is to be found somewhere on auto-insert-path.

@end defopt
@defopt auto-insert-path

A list of directories in which Auto Insert files will be searched for. 
@c Each directory name must end in a @file{/}.
Typically this will include a directory containing a user's own library
of insert files and a system wide directory.
For shared projects, where files should have a common appearance,
a project specific directory could be set up.

@end defopt
@defopt auto-insert-search-current-dir
Default: t

Setting this to @code{t} causes Auto Insert to look for auto-insert
files in the current directory associated with the new buffer, before
looking along auto-insert-path.
If a project requires a different file layout from the default, suitable
insert files for each file type could be created in the project's
directory.

@end defopt
@defopt auto-insert-num-prefix
Default: @samp{"0"}

The prefix used when inserting numerical days and months. 
Other suitable values might be @samp{" "} or @samp{""},
to create right justified dates, or to close up space
with no leading zero.

@end defopt
@defopt mail-self-address
Default: @samp{"<user@@machine>"} or @samp{"<user@@gnus-local-domain>"}

Used when inserting the mail address of the user, this should be set to
a valid mail address if the default is not a correct mail address.

@end defopt
@defopt auto-insert-organisation
Default: @samp{gnus-local-organization} or @samp{$ORGANIZATION}

Used when inserting the organisation of the user.
If GNUS has not been set up, the ORGANIZATION (or ORGANISATION)
environment variable is used. If none are set, the empty string
is used.
@end defopt
@defopt auto-insert-system-name
Default: @samp{(system-name)}

Used when inserting the hostname with %h.
There shouldn't be any reason to change this.
@end defopt
@defopt auto-insert-login-name
Default: @samp{(user-login-name)}

The login name of the user, used when expanding %u.
@end defopt
@defopt auto-insert-full-name
Default: @samp{(user-full-name)}

The full name of the user, used when expanding %U. 
Normally this is taken from the password file.
@end defopt



@node Creating Template Files,,Customisation Variables,Customisation
@comment  node-name,  next,  previous,  up
@section Creating Template Files

@cindex Percent Expansions
@cindex Template Files
Auto Insert template files are plain text files containing default
text. However, for shared templates this alone would not be very useful,
since the user would not be able to put their own name at the head of
the file, nor could the filename itself be automatically inserted in the
new buffer.

To solve this Auto Insert will also expand certain @dfn{%-escapes}
into dynamically defined text, including the current date and time,
filename, username, etc. The initial positions of point 
( @inforef{Point,,emacs})
and mark
( @inforef{Mark,,emacs} )
can also be set.

Auto Insert template files will be searched for in order
through the directories listed in auto-insert-path 
@xref{Customisation Variables}.
This allows users to define their own library of templates
to override any system-wide defaults.

@table @samp
@item %u
is replaced by the user's login name from auto-insert-login-name, 
see @ref{Customisation Variables}
@item %U
is the user's full name from auto-insert-full-name,
see @ref{Customisation Variables}
@item %h
is the name of the user's machine (the value of auto-insert-system-name),
see @ref{Customisation Variables}
@item %a
is the user's mail address from mail-self-address, 
see @ref{Customisation Variables}
@item %f
is the file name (without the directory part)
@item %F
is the file name, capitalised
@item %b
is the base file name (without any suffix)
@item %B
is the base file name capitalised
@item %e
is the file's suffix (extension)
@item %E
is the file's suffix, capitalised
@item %p
is the full path name of the file
@item %P
is the directory part of the file name
@item %d
is the current date in a standard format
@item %y
is the current year
@item %Y
is the final two digits of the current year
@item %M
is the month in figures
@item %m
is the month in words
@item %D
is the day of the month
@item %o
is the user's organisation (from the lisp variable
gnus-local-organization, if it's set, or the environment variable
$ORGANIZATION or $ORGANISATION)
@item %@{ and %@}
surround a comment. This is text that is simply removed when inserted.
@item %[ and %]
surround a string that is used to prompt the user for text to be inserted
in the buffer at that point. This is useful for inserting text that
cannot be inferred from the buffer's name.
@item %1, %2, ..., %9
refer to the nth string that was prompted for with %[ %].
@item %( and %)
surround an Emacs lisp form that is evalled and deleted
@item %^
centres the current line
@item %+
fills the current paragraph. This allows text to be tidied up after long
replacements have been inserted.
@item %=
justifies the current paragraph, so that the right and left margins are 
straight.
@item %< and %>
surround a value for fill-prefix. This is used for subsequent paragraph 
fills, and also for justifying paragraphs. This is useful for text that
is embedded in a comment where each line should be prefixed with a common
sequence (eg @samp{;;;} in Emacs lisp, @samp{//} in C++).
@item %%
is a single %
@item %@@
sets the initial position of `point'

@end table


@c @node Function Index, Variable Index, Customisation, Top
@c @unnumbered Function Index

@c @cindex Functions

@c @printindex fn

@node Variable Index, Concept Index, Customisation, Top
@unnumbered Variable Index

@cindex Variables

@printindex vr

@node Concept Index,  , Variable Index, Top
@unnumbered Concept Index

@cindex Auto Insert Concepts
@printindex cp

@contents


@bye
